name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: write
      packages: write
      pull-requests: write
      issues: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Node.js for NPM
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          publish: bun run release
          version: bun run version-packages
          commit: 'chore: version packages'
          title: 'chore: version packages'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to GitHub Packages
        if: steps.changesets.outputs.published == 'true'
        run: |
          # Setup Node.js for GitHub Packages
          echo "@beshkenadze:registry=https://npm.pkg.github.com" >> ~/.npmrc
          echo "//npm.pkg.github.com/:_authToken=${NODE_AUTH_TOKEN}" >> ~/.npmrc
          
          # Parse published packages and publish to GitHub Packages
          echo '${{ steps.changesets.outputs.publishedPackages }}' | jq -r '.[] | .name' | while read package; do
            cd packages/${package#@beshkenadze/}
            npm publish --registry=https://npm.pkg.github.com --access public
            cd ../..
          done
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        if: steps.changesets.outputs.published == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release-${{ github.sha }}
          release_name: Release ${{ github.sha }}
          body: |
            ## Published Packages
            
            ${{ steps.changesets.outputs.publishedPackages }}
            
            ### Features
            - TypeScript SDKs for eCFR, Federal Register, and CourtListener APIs
            - Model Context Protocol (MCP) servers for all APIs
            - Complete API coverage
            - Monorepo structure with Turborepo
          draft: false
          prerelease: false

      - name: Success notification
        if: steps.changesets.outputs.published == 'true'
        run: |
          echo "ðŸŽ‰ Successfully published packages!"
          echo '${{ steps.changesets.outputs.publishedPackages }}' | jq -r '.[] | "ðŸ“¦ \(.name) v\(.version): https://www.npmjs.com/package/\(.name)"'
          echo "ðŸ“¦ GitHub Packages: https://github.com/${{ github.repository }}/packages"