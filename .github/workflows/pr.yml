name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  lint-and-format:
    name: Lint and Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run linting and formatting checks
        run: bunx turbo run check:ci

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test-type: [unit, integration, e2e]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Setup Playwright
        if: matrix.test-type == 'e2e'
        run: bunx playwright install --with-deps chromium

      - name: Generate SDKs
        if: matrix.test-type != 'unit'
        run: bunx turbo run generate

      - name: Build packages
        run: bunx turbo run build

      - name: Run tests
        run: |
          case "${{ matrix.test-type }}" in
            unit)
              bunx turbo run test
              ;;
            integration)
              bunx turbo run test:integration
              ;;
            e2e)
              bunx turbo run test:e2e
              ;;
          esac

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Generate SDKs
        run: bunx turbo run generate

      - name: Build all packages
        run: bunx turbo run build

      - name: Check build artifacts
        run: |
          # Verify that dist directories exist for all packages
          for pkg in packages/*/package.json; do
            dir=$(dirname "$pkg")
            name=$(jq -r .name "$pkg")
            if [ -d "$dir/dist" ]; then
              echo "✅ $name built successfully"
            else
              echo "❌ $name build failed - no dist directory"
              exit 1
            fi
          done

  changeset:
    name: Changeset Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Check for changeset
        run: |
          # Skip changeset check for certain types of PRs
          if [[ "${{ github.event.pull_request.title }}" =~ ^(chore|docs|ci|build): ]]; then
            echo "Skipping changeset check for ${{ github.event.pull_request.title }}"
            exit 0
          fi
          
          # Check if there's a changeset
          npx changeset status --since=origin/main